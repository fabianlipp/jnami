<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="nami.statistics.StatisticsMapper">
	<select id="checkForGruppierung" parameterType="String"
		resultType="int">
		SELECT COUNT(*)
		FROM gruppierung
		WHERE gruppierungId = #{id}
	</select>

	<insert id="insertGruppierung">
		INSERT INTO gruppierung
			(gruppierungId, descriptor,	dioezeseId, bezirkId)
		VALUES (#{gruppierungId},
			#{descriptor},
			#{dioezeseId, jdbcType=CHAR},
			#{bezirkId, jdbcType=CHAR})
	</insert>

	<select id="checkForGruppe" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM statisticsGruppe
		WHERE gruppeId = #{id}
	</select>

	<insert id="newRun" parameterType="map" useGeneratedKeys="true"
		keyProperty="runId">
		INSERT INTO statisticsRun(datum)
		VALUES (NOW())
	</insert>

	<insert id="insertGruppe">
		INSERT INTO statisticsGruppe (gruppeId, bezeichnung)
		VALUES (#{id}, #{bezeichnung})
	</insert>

	<insert id="insertAnzahl">
		INSERT INTO statisticsData
			(gruppierungId, gruppeId, runId, anzahl)
		VALUES (#{gruppierungId},
			#{gruppeId},
			#{runId}, 
			#{anzahl})
	</insert>

	<select id="getRuns" resultType="nami.statistics.StatisticsDatabase$Run">
		SELECT runId, datum
		FROM statisticsRun
		ORDER BY datum DESC
	</select>

	<select id="getLatestRunId" resultType="int">
		SELECT runId
		FROM statisticsRun
		ORDER BY datum DESC
		LIMIT 1
	</select>

	<select id="getStatsAllGruppierungen" resultType="java.util.LinkedHashMap">
		SELECT g.gruppierungId AS Gruppierungsnummer,
			g.descriptor AS Gruppierungsname,
			(CASE WHEN g.dioezeseId IS NOT NULL THEN g.dioezeseId ELSE "" END) AS "Di√∂zese",
			(CASE WHEN g.bezirkId IS NOT NULL THEN g.bezirkId ELSE "" END) AS "Bezirk",
		<foreach item="gruppe" index="index" collection="gruppen" separator=",">
			SUM(CASE WHEN gruppeId = ${gruppe.id} THEN anzahl END) AS "${gruppe.bezeichnung}"
		</foreach>
		FROM gruppierung AS g, gruppierung AS c, statisticsData AS d
		WHERE runId = #{runId}
			AND d.gruppierungId = c.gruppierungId
		<if test="cumulate == true">
			AND (g.gruppierungId = c.gruppierungId
				OR g.gruppierungId = c.bezirkId
				OR g.gruppierungId = c.dioezeseId)
		</if>
		<if test="cumulate == false">
			AND g.gruppierungId = c.gruppierungId
		</if>
		GROUP BY g.gruppierungId 
	</select>
	
	<select id="getHistory" resultType="java.util.LinkedHashMap">
		SELECT runId AS RunID,
			datum AS Datum,
		<foreach item="gruppe" index="index" collection="gruppen" separator=",">
			SUM(CASE WHEN gruppeId = ${gruppe.id} THEN anzahl END) AS "${gruppe.bezeichnung}"
		</foreach>
		FROM statisticsData
			NATURAL JOIN statisticsRun
		<if test="cumulate == true">
			NATURAL JOIN gruppierung
		WHERE gruppierungId = #{id} OR bezirkId = #{id} OR dioezeseId = #{id}
		GROUP BY runId, datum
		</if>
		<if test="cumulate == false">
		WHERE gruppierungId = #{id}
		GROUP BY runId, datum
		</if>
	</select>
</mapper>