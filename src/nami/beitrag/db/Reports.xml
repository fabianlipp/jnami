<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="nami.beitrag.db.ReportsMapper">
	<select id="abrechnungHalbjahr" resultType="DataAbrechnungHalbjahr">
		SELECT *
		FROM beitragBuchung
			JOIN beitragMitglied ON beitragBuchung.mitgliedId = beitragMitglied.mitgliedId
		WHERE beitragBuchung.halbjahr = #{halbjahr.halbjahr}
			AND beitragBuchung.jahr = #{halbjahr.jahr}
			AND beitragBuchung.storniert = FALSE
			<if test="ausgeglichen == false">
				AND beitragBuchung.mitgliedId IN (
				  SELECT beitragMitglied.mitgliedId
				  FROM beitragBuchung
				    JOIN beitragMitglied ON beitragBuchung.mitgliedId = beitragMitglied.mitgliedId
				  WHERE beitragBuchung.halbjahr = #{halbjahr.halbjahr}
				    AND beitragBuchung.jahr = #{halbjahr.jahr}
				    AND beitragBuchung.storniert = FALSE
				  GROUP BY beitragMitglied.mitgliedId
				  HAVING SUM(beitragBuchung.betrag) != 0
				)
			</if>
		ORDER BY beitragMitglied.mitgliedId
	</select>
	
	<select id="abrechnungNachTypenHalbjahr" resultType="DataAbrechnungNachTypen">
		SELECT typ, vorausberechnung, SUM(betrag) AS betrag
		FROM beitragBuchung
		WHERE beitragBuchung.halbjahr = #{halbjahr.halbjahr}
		  AND beitragBuchung.jahr = #{halbjahr.jahr}
		  AND beitragBuchung.storniert = FALSE
		GROUP BY typ, vorausberechnung
	</select>

	<select id="mitgliederOhneSepaMandat" resultType="BeitragMitglied">
		SELECT m.*
		FROM beitragMitglied m
			LEFT JOIN beitragSepaMandat s
				ON m.aktivesMandat = s.mandatId 
		WHERE (aktivesMandat IS NULL
			OR gueltig = FALSE)
			AND status = 'AKTIV'
			AND mitgliedstyp = 'MITGLIED'
			AND deleted = FALSE
	</select>

	<resultMap id="anzahlBuchungenProHalbjahrMap" type="DataAnzahlBuchungenProHalbjahr">
		<result property="vorausberechnungen" column="vorausberechnungen"/>
		<result property="endgueltig" column="endgueltig"/>
		<result property="total" column="total"/>
		<association property="halbjahr" resultMap="nami.beitrag.db.BeitragMapper.halbjahrResult" />
	</resultMap>

	<select id="anzahlBuchungenProHalbjahr" resultMap="anzahlBuchungenProHalbjahrMap">
		SELECT halbjahr, jahr, SUM(vorausberechnung) AS vorausberechnungen,
		       SUM(CASE vorausberechnung WHEN TRUE THEN FALSE ELSE TRUE END) AS endgueltig, COUNT(*) AS total
		FROM beitragBuchung
		WHERE storniert = FALSE
		GROUP BY halbjahr, jahr
		ORDER BY jahr, halbjahr
	</select>
</mapper>
