<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="nami.beitrag.db.RechnungenMapper">
	<select id="mitgliederOffeneForderungen" parameterType="Halbjahr" resultType="DataMitgliederForderungen">
		SELECT beitragBuchung.mitgliedId AS mitgliedId, mitgliedsnummer, nachname,
			vorname, SUM(betrag) AS saldo
		FROM beitragBuchung, beitragMitglied
		WHERE beitragBuchung.mitgliedId = beitragMitglied.mitgliedId
			AND beitragBuchung.halbjahr = #{halbjahr}
			AND beitragBuchung.jahr = #{jahr}
		GROUP BY beitragBuchung.mitgliedId
		HAVING SUM(betrag) &lt;&gt; 0
	</select>

	<select id="maxRechnungsnummer" parameterType="int" resultType="int">
		SELECT CASE WHEN MAX(rechnungsNummer) IS NULL THEN 0 ELSE MAX(rechnungsNummer) END
		FROM beitragRechnung
		WHERE YEAR(datum) = #{jahr}
	</select>
	
	<insert id="insertRechnung" parameterType="BeitragRechnung" useGeneratedKeys="true"
		keyProperty="rechnungId">
		INSERT INTO beitragRechnung
			(mitgliedId,
			rechnungsNummer,
			datum,
			frist,
			beglichen)
		VALUES
			(#{mitgliedId},
			#{rechnungsNummer},
			#{datum},
			#{frist},
			#{beglichen})
	</insert>
	
	<select id="getRechnung" parameterType="int" resultType="BeitragRechnung">
		SELECT *
		FROM beitragRechnung
		WHERE rechnungId = #{id}
	</select>
	
	<insert id="insertPosten">
		INSERT INTO beitragRechnungPosten
			(rechnungId,
			buchungId,
			buchungstext)
		VALUES
			(#{rechnungId},
			#{buchungId},
			#{buchungstext})
	</insert>

</mapper>
